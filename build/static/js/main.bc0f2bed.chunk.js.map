{"version":3,"sources":["constants.js","services/FileService.js","component/SaveFile.jsx","component/ShowFiles.jsx","component/ControlPanel.jsx","component/Canvas.jsx","App.js","serviceWorker.js","index.js"],"names":["baseUrl","URL","GET_FILES","GET_FILE_BY_NAME","name","SAVE_FILE","FILE_SERVICE","getFiles","a","Axios","get","getFileByName","saveFile","data","post","SaveFiles","onSave","selectedFile","onChange","style","margin","textAlign","fontSize","type","value","target","pattern","marginTop","onClick","ShowFiles","onLoad","files","useState","selected","setSelected","handleSelect","innerText","map","file","key","fontWeight","cursor","disabled","ControlPanel","setData","filename","setFilename","setFiles","useEffect","then","filenames","split","height","width","length","splice","getMouseXY","offset","clientX","clientY","mouseX","x","mouseY","y","isLeftMouseButton","button","Canvas","canvasRef","useRef","canvasObj","setCanvasObj","Y","beginMousePosition","setBeginMousePosition","isMousePressed","setMousePressed","rectangles","setRectangles","redraw","useCallback","context","getContext","clearRect","forEach","rectangle","startX","startY","strokeRect","drawExistingRectangles","handleMouseUp","event","getBoundingClientRect","newRectangle","current","fillStyle","display","ref","onMouseDown","onMouseMove","ctx","onMouseUp","onMouseLeave","border","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bc0f2bed.chunk.js","sourcesContent":["const baseUrl = 'http://localhost:8080/api'\r\n\r\nexport const URL = {\r\n  GET_FILES: `${baseUrl}/files`,\r\n  GET_FILE_BY_NAME: (name) => `${baseUrl}/files/${name}`,\r\n  SAVE_FILE: `${baseUrl}/files`\r\n}","import Axios from \"axios\";\r\nimport { URL } from \"../constants\";\r\n\r\nconst getFiles = async () => {\r\n  return await Axios.get(URL.GET_FILES);\r\n};\r\n\r\nconst getFileByName = async (name) => {\r\n  return await Axios.get(URL.GET_FILE_BY_NAME(name));\r\n};\r\n\r\nconst saveFile = async (name, data) => {\r\n  await Axios.post(URL.SAVE_FILE, { name, data });\r\n};\r\n\r\nconst FILE_SERVICE = {\r\n  getFiles,\r\n  getFileByName,\r\n  saveFile,\r\n};\r\n\r\nexport default FILE_SERVICE;\r\n","import React from 'react';\r\n\r\nexport const SaveFiles = ({ onSave, selectedFile, onChange }) => {\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange(target.value)\r\n  }\r\n\r\n  return (\r\n    <div style={{margin: '50px', textAlign: 'center'}}>\r\n      <div>\r\n        <input style={{fontSize: '20px'}} type=\"text\" value={selectedFile} onChange={handleChange} pattern=\"[a-zA-Z0-9]*\" />\r\n      </div>\r\n      <div style={{marginTop: '30px'}}>\r\n        <button onClick={onSave} style={{fontSize: '20px'}}>Save File</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\n\r\nexport const ShowFiles = ({ onLoad, files }) => {\r\n  const [selected, setSelected] = useState('')\r\n\r\n  const handleClick = () => {\r\n    onLoad(selected)\r\n  }\r\n\r\n  const handleSelect = ({ target }) => {\r\n    setSelected(target.innerText)\r\n  }\r\n\r\n  return <div style={{ margin: '50px', textAlign: 'center' }}>\r\n    <ol style={{ textAlign: 'left' }}>\r\n      {files.map((file) => <li key={file} value={file} style={file === selected ? { fontWeight: 'bold', fontSize: '20px', marginTop: '10px', cursor: 'pointer' } : { fontSize: '20px', marginTop: '10px', cursor: 'pointer' }} onClick={handleSelect} >{file}</li>)}\r\n    </ol>\r\n    <button style={{ fontSize: '20px' }} disabled={selected === ''} onClick={handleClick}>Load File</button>\r\n  </div>\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport FILE_SERVICE from '../services/FileService';\r\nimport { SaveFiles } from './SaveFile';\r\nimport { ShowFiles } from './ShowFiles';\r\nimport { FaUndo } from 'react-icons/fa';\r\n\r\nconst ControlPanel = ({ data, setData }) => {\r\n  const [filename, setFilename] = useState('')\r\n  const [files, setFiles] = useState([])\r\n\r\n  const handleUndo = () => {\r\n    if (data.length < 1) {\r\n      return\r\n    }\r\n    setData([\r\n      ...data.splice(0, data.length - 1)\r\n    ])\r\n  }\r\n\r\n  useEffect(() => {\r\n    FILE_SERVICE.getFiles().then(({ data }) => {\r\n      const filenames = data.map((file) => {\r\n        return file.split('.')[0]\r\n      })\r\n      setFiles(filenames)\r\n    })\r\n  }, [])\r\n\r\n  const handleSave = () => {\r\n    FILE_SERVICE.saveFile(filename, data).then(() => {\r\n      FILE_SERVICE.getFiles().then(({ data }) => {\r\n        const filenames = data.map((file) => {\r\n          return file.split('.')[0]\r\n        })\r\n        setFiles(filenames)\r\n      })\r\n    })\r\n  }\r\n\r\n  const handleLoad = (filename) => {\r\n    FILE_SERVICE.getFileByName(filename).then(({ data }) => {\r\n      setData(data.data)\r\n    })\r\n    setFilename(filename)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <FaUndo style={{ cursor: 'pointer', height: '50px', width: '50px', margin: '50px' }} onClick={handleUndo} />\r\n      </div>\r\n      <SaveFiles onSave={handleSave} selectedFile={filename} onChange={setFilename} />\r\n      <ShowFiles files={files} onLoad={handleLoad} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ControlPanel","import React, { useRef } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport ControlPanel from './ControlPanel';\r\n\r\nconst getMouseXY = (offset, clientX, clientY) => {\r\n  const { x: offsetX, y: offsetY } = offset\r\n  const mouseX = clientX - offsetX\r\n  const mouseY = clientY - offsetY\r\n  return { mouseX, mouseY }\r\n}\r\n\r\nconst isLeftMouseButton = (button) => {\r\n  const buttonPressed = button\r\n  const LEFT_BUTTON = 0\r\n  return buttonPressed === LEFT_BUTTON\r\n}\r\n\r\nconst drawExistingRectangles = (context, rectangles) => {\r\n  rectangles.forEach((rectangle) => {\r\n    const { startX, startY, width, height } = rectangle\r\n    context.strokeRect(startX, startY, width, height)\r\n    return\r\n  })\r\n  return\r\n}\r\n\r\nexport const Canvas = () => {\r\n\r\n  const canvasRef = useRef(null)\r\n  const [canvasObj, setCanvasObj] = useState()\r\n  const [beginMousePosition, setBeginMousePosition] = useState({ x: 0, Y: 0 })\r\n  const [isMousePressed, setMousePressed] = useState(false)\r\n  const [rectangles, setRectangles] = useState([])\r\n  const redraw = useCallback(() => {\r\n    if (!canvasObj) {\r\n      return\r\n    }\r\n    const context = canvasObj.getContext('2d')\r\n    context.clearRect(0, 0, canvasObj.width, canvasObj.height)\r\n    drawExistingRectangles(context, rectangles)\r\n  }, [canvasObj, rectangles]\r\n  )\r\n  const handleMouseDown = (event) => {\r\n    const { mouseX, mouseY } = getMouseXY(canvasObj.getBoundingClientRect(), event.clientX, event.clientY)\r\n    if (!isLeftMouseButton(event.button)) {\r\n      return\r\n    }\r\n    setBeginMousePosition({ x: mouseX, y: mouseY })\r\n    setMousePressed(true)\r\n  }\r\n\r\n  const handleMouseMove = (event) => {\r\n    if (!canvasObj) {\r\n      return\r\n    }\r\n    const ctx = canvasObj.getContext('2d')\r\n    if (!isMousePressed || !isLeftMouseButton(event.button)) {\r\n      return\r\n    }\r\n\r\n    redraw()\r\n    const { mouseX, mouseY } = getMouseXY(canvasObj.getBoundingClientRect(), event.clientX, event.clientY)\r\n    const width = mouseX - beginMousePosition.x\r\n    const height = mouseY - beginMousePosition.y\r\n    ctx.strokeRect(beginMousePosition.x, beginMousePosition.y, width, height)\r\n  }\r\n\r\n  const handleMouseUp = (event) => {\r\n    if (!isMousePressed) {\r\n      return\r\n    }\r\n    const { mouseX, mouseY } = getMouseXY(canvasObj.getBoundingClientRect(), event.clientX, event.clientY)\r\n    if (!isLeftMouseButton(event.button)) {\r\n      return\r\n    }\r\n    const width = mouseX - beginMousePosition.x\r\n    const height = mouseY - beginMousePosition.y\r\n\r\n    const newRectangle = {\r\n      startX: beginMousePosition.x\r\n      , startY: beginMousePosition.y\r\n      , width\r\n      , height\r\n    }\r\n    setRectangles(\r\n      [\r\n        ...rectangles\r\n        , newRectangle\r\n      ]\r\n    )\r\n    setMousePressed(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    redraw()\r\n  }, [redraw])\r\n\r\n  useEffect(() => {\r\n    setCanvasObj(canvasRef.current)\r\n    if (canvasObj) {\r\n      const cxt = canvasObj.getContext('2d')\r\n      cxt.fillStyle = 'green'\r\n    }\r\n  }, [canvasObj])\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'inline-block' }}>\r\n        <canvas ref={canvasRef} onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp} onMouseLeave={handleMouseUp} style={{ border: '1px solid red' }} height=\"800\" width=\"800\" />\r\n      </div>\r\n      <div style={{ display: 'inline-block' }}>\r\n        <ControlPanel data={rectangles} setData={setRectangles} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Canvas } from \"./component/Canvas\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Canvas />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}